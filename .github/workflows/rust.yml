name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 9 * * 1'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-release-

    - name: Install dependencies (apt)
      run: sudo apt-get install libpcsclite-dev nettle-dev

    - name: Build
      run: cargo build --release --verbose

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: bin
        path: target/release/sh4d0wup

  integration-test:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        plot:
          - name: contrib/plot-alpine.yaml
          - name: contrib/plot-archlinux-lsign.yaml
          - name: contrib/plot-archlinux-replaces.yaml
          - name: contrib/plot-archlinux-resign.yaml
          - name: contrib/plot-archlinux.yaml
          - name: contrib/plot-curl-sh.yaml
          - name: contrib/plot-debian.yaml
          - name: contrib/plot-elf-galore.yaml
          - name: contrib/plot-git.yaml
          - name: contrib/plot-helm.yaml
          - name: contrib/plot-httpbin.yaml
          - name: contrib/plot-linuxbrew.yaml
            args: '-B 0.0.0.0:443'
            sudo: 'sudo'
          - name: contrib/plot-podman-cgr.yaml
          - name: contrib/plot-podman-docker-hub.yaml
          - name: contrib/plot-podman-ecr.yaml
          - name: contrib/plot-podman-gcr.yaml
          - name: contrib/plot-podman-ghcr.yaml
          - name: contrib/plot-rustup.yaml
          - name: contrib/plot-terraform.yaml

    name: ${{ matrix.plot }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Install dependencies (apt)
        run: sudo apt-get install libpcsclite-dev nettle-dev
      - name: ü¶ù Run a plot
        run: chmod +x bin/sh4d0wup && ${{ matrix.plot.sudo }} bin/sh4d0wup check ${{ matrix.plot.name }} ${{ matrix.plot.args }}

  make-plots:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Install dependencies (apt)
        run: sudo apt-get install libpcsclite-dev nettle-dev
      - name: Compile all plots
        run: chmod +x bin/sh4d0wup && make sh4d0wup=bin/sh4d0wup -j8

  unit-test:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-debug-

    - name: Install dependencies (apt)
      run: sudo apt-get install libpcsclite-dev nettle-dev sq

    - name: Run clippy
      run: cargo clippy -- -D warnings
    - name: Run tests
      run: cargo test --verbose

  fmt:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Run cargo fmt
      run: cargo fmt --all -- --check
